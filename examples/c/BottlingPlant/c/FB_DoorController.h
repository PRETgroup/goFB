// This file has been automatically generated by goFB and should not be edited by hand
// Compiler written by Hammond Pearce and available at github.com/kiwih/goFB

// This file represents the interface of Function Block DoorController
#ifndef DOORCONTROLLER_H_
#define DOORCONTROLLER_H_

#include "fbtypes.h"
#include "util.h"



//This is a BFB, so we need an enum type for the state machine
enum DoorController_states { STATE_DoorController_E_Stop, STATE_DoorController_Run, STATE_DoorController_Await };


union DoorControllerInputEvents {
	struct {
		UDINT ReleaseDoorOverride;
		UDINT BottlingDone;
		UDINT EmergencyStopChanged;
	} event;
	
};


union DoorControllerOutputEvents {
	struct {
		UDINT DoorReleaseCanister;
	} event;
	
};


typedef struct {
    //input events
	union DoorControllerInputEvents inputEvents;

    //output events
	union DoorControllerOutputEvents outputEvents;

    //input vars
	BOOL EmergencyStop;
    
    //output vars
	
	//any internal vars (BFBs only)
    
	//any child FBs (CFBs only)
	
	//resource vars
	
	//resources (Devices only)
	
	//state and trigger (BFBs only)
	enum DoorController_states _state; //stores current state
	BOOL _trigger; //indicates if a state transition has occured this tick
	

	
} DoorController_t;

//all FBs get a preinit function
int DoorController_preinit(DoorController_t  *me);

//all FBs get an init function
int DoorController_init(DoorController_t  *me);

//all FBs get a run function
void DoorController_run(DoorController_t  *me);



#endif
