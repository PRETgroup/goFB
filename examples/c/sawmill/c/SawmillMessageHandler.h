// This file has been automatically generated by goFB and should not be edited by hand
// Compiler written by Hammond Pearce and available at github.com/kiwih/goFB

// This file represents the interface of Function Block SawmillMessageHandler
#ifndef SAWMILLMESSAGEHANDLER_H_
#define SAWMILLMESSAGEHANDLER_H_

#include "fbtypes.h"

//This is a BFB, so we need an enum type for the state machine
enum SawmillMessageHandler_states { STATE_SawmillMessageHandler_Start, STATE_SawmillMessageHandler_try_tx, STATE_SawmillMessageHandler_tx_done };


union SawmillMessageHandlerInputEvents {
	struct {
		UDINT MessageChanged : 1;
		UDINT TxSuccessChanged : 1;
	} event;
	UDINT events[1];
};


union SawmillMessageHandlerOutputEvents {
	struct {
		UDINT TxDataPresent : 1;
	} event;
	UDINT events[1];
};


struct SawmillMessageHandler {
    //input events
	union SawmillMessageHandlerInputEvents inputEvents;

    //output events
	union SawmillMessageHandlerOutputEvents outputEvents;

    //input vars
	INT Message;
    BOOL TxSuccess;
    
    //output vars
	INT TxData;
    
	//any internal vars (BFBs only)
    
	//any child FBs (CFBs only)
	
	//resource vars
	
	//resources (Devices only)
	
	//state and trigger (BFBs only)
	enum SawmillMessageHandler_states _state; //stores current state
	BOOL _trigger; //indicates if a state transition has occured this tick
	
};

//all FBs get a preinit function
int SawmillMessageHandler_preinit(struct SawmillMessageHandler _SPM *me);

//all FBs get an init function
int SawmillMessageHandler_init(struct SawmillMessageHandler _SPM *me);

//all FBs get a run function
void SawmillMessageHandler_run(struct SawmillMessageHandler _SPM *me);


//basic FBs have a number of algorithm functions

void SawmillMessageHandler_LoadData(struct SawmillMessageHandler _SPM *me);


#endif
