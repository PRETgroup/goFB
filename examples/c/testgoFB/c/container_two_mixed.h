// This file has been automatically generated by goFB and should not be edited by hand
// Compiler written by Hammond Pearce and available at github.com/kiwih/goFB

// This file represents the interface of Function Block container_two_mixed
#ifndef CONTAINER_TWO_MIXED_H_
#define CONTAINER_TWO_MIXED_H_

#include "fbtypes.h"

//This is a CFB, so we need the #includes for the child blocks embedded here
#include "container_one.h"
#include "passforward.h"


union container_two_mixedInputEvents {
	struct {
		UDINT DataInChanged : 1;
	} event;
	UDINT events[1];
};


union container_two_mixedOutputEvents {
	struct {
		UDINT DataOutChanged : 1;
	} event;
	UDINT events[1];
};


typedef struct {
    //input events
	union container_two_mixedInputEvents inputEvents;

    //output events
	union container_two_mixedOutputEvents outputEvents;

    //input vars
	INT DataIn;
    INT printf_id1;
    INT printf_id2;
    
    //output vars
	INT DataOut;
    
	//any internal vars (BFBs only)
    
	//any child FBs (CFBs only)
	container_one_t cf1;
	passforward_t pf2;
	
	//resource vars
	
	//resources (Devices only)
	
	//state and trigger (BFBs only)
	
} container_two_mixed_t;

//all FBs get a preinit function
int container_two_mixed_preinit(container_two_mixed_t  *me);

//all FBs get an init function
int container_two_mixed_init(container_two_mixed_t  *me);

//all FBs get a run function
void container_two_mixed_run(container_two_mixed_t  *me);

//composite/resource/device FBs get sync functions
void container_two_mixed_syncOutputEvents(container_two_mixed_t  *me);
void container_two_mixed_syncInputEvents(container_two_mixed_t  *me);

void container_two_mixed_syncOutputData(container_two_mixed_t  *me);
void container_two_mixed_syncInputData(container_two_mixed_t  *me);



#endif
