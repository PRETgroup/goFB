// This file has been automatically generated by goFB and should not be edited by hand
// Compiler written by Hammond Pearce and available at github.com/kiwih/goFB

// This file represents the interface of Function Block VVI_VRP
#ifndef VVI_VRP_H_
#define VVI_VRP_H_

#include "fbtypes.h"

//This is a BFB, so we need an enum type for the state machine
enum VVI_VRP_states { STATE_VVI_VRP_Start, STATE_VVI_VRP_Wait_For_VSense, STATE_VVI_VRP_Resting, STATE_VVI_VRP_Detected_VPulse, STATE_VVI_VRP_Detected_VRefractory };


union VVI_VRPInputEvents {
	struct {
		UDINT VPulse;
		UDINT VPace;
		UDINT VRP_Timer_Timeout;
	} event;
	
};


union VVI_VRPOutputEvents {
	struct {
		UDINT VRP_Start_Timer;
		UDINT VSense;
		UDINT VRefractory;
	} event;
	
};


typedef struct {
    //input events
	union VVI_VRPInputEvents inputEvents;

    //output events
	union VVI_VRPOutputEvents outputEvents;

    //input vars
	
    //output vars
	INT VRP_Timeout_Value;
    
	//any internal vars (BFBs only)
    
	//any child FBs (CFBs only)
	
	//resource vars
	
	//resources (Devices only)
	
	//state and trigger (BFBs only)
	enum VVI_VRP_states _state; //stores current state
	BOOL _trigger; //indicates if a state transition has occured this tick
	
} VVI_VRP_t;

//all FBs get a preinit function
int VVI_VRP_preinit(VVI_VRP_t  *me);

//all FBs get an init function
int VVI_VRP_init(VVI_VRP_t  *me);

//all FBs get a run function
void VVI_VRP_run(VVI_VRP_t  *me);



#endif
