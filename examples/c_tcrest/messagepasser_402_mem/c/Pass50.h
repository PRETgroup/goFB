// This file has been automatically generated by goFB and should not be edited by hand
// Compiler written by Hammond Pearce and available at github.com/kiwih/goFB

// This file represents the interface of Function Block Pass50
#ifndef PASS50_H_
#define PASS50_H_

#include "fbtypes.h"

//This is a CFB, so we need the #includes for the child blocks embedded here
#include "Pass10.h"
#include "Pass10.h"
#include "Pass10.h"
#include "Pass10.h"
#include "Pass10.h"


union Pass50InputEvents {
	struct {
		UDINT CountChanged;
	} event;
	
};


union Pass50OutputEvents {
	struct {
		UDINT OutCountChanged;
	} event;
	
};


typedef struct {
    //input events
	union Pass50InputEvents inputEvents;

    //output events
	union Pass50OutputEvents outputEvents;

    //input vars
	LINT Count;
    
    //output vars
	LINT OutCount;
    
	//any internal vars (BFBs only)
    
	//any child FBs (CFBs only)
	Pass10_t c1;
	Pass10_t c2;
	Pass10_t c3;
	Pass10_t c4;
	Pass10_t c5;
	
	//resource vars
	
	//resources (Devices only)
	
	//state and trigger (BFBs only)
	
} Pass50_t;

//all FBs get a preinit function
int Pass50_preinit(Pass50_t  *me);

//all FBs get an init function
int Pass50_init(Pass50_t  *me);

//all FBs get a run function
void Pass50_run(Pass50_t  *me);

//composite/resource/device FBs get sync functions
void Pass50_syncOutputEvents(Pass50_t  *me);
void Pass50_syncInputEvents(Pass50_t  *me);

void Pass50_syncOutputData(Pass50_t  *me);
void Pass50_syncInputData(Pass50_t  *me);



#endif
