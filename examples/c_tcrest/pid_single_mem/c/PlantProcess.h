// This file has been automatically generated by goFB and should not be edited by hand
// Compiler written by Hammond Pearce and available at github.com/kiwih/goFB

// This file represents the interface of Function Block PlantProcess
#ifndef PLANTPROCESS_H_
#define PLANTPROCESS_H_

#include "fbtypes.h"

//This is a BFB, so we need an enum type for the state machine
enum PlantProcess_states { STATE_PlantProcess_Start, STATE_PlantProcess_zero, STATE_PlantProcess_tick };


union PlantProcessInputEvents {
	struct {
		UDINT Zero;
		UDINT ControlChange;
		UDINT RandomChange;
	} event;
	
};


union PlantProcessOutputEvents {
	struct {
		UDINT ValueChange;
	} event;
	
};


typedef struct {
    //input events
	union PlantProcessInputEvents inputEvents;

    //output events
	union PlantProcessOutputEvents outputEvents;

    //input vars
	REAL Control;
    REAL Random;
    
    //output vars
	REAL Value;
    
	//any internal vars (BFBs only)
    
	//any child FBs (CFBs only)
	
	//resource vars
	
	//resources (Devices only)
	
	//state and trigger (BFBs only)
	enum PlantProcess_states _state; //stores current state
	BOOL _trigger; //indicates if a state transition has occured this tick
	
} PlantProcess_t;

//all FBs get a preinit function
int PlantProcess_preinit(PlantProcess_t  *me);

//all FBs get an init function
int PlantProcess_init(PlantProcess_t  *me);

//all FBs get a run function
void PlantProcess_run(PlantProcess_t  *me);



#endif
