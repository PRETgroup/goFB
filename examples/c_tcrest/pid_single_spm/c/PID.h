// This file has been automatically generated by goFB and should not be edited by hand
// Compiler written by Hammond Pearce and available at github.com/kiwih/goFB

// This file represents the interface of Function Block PID
#ifndef PID_H_
#define PID_H_

#include "fbtypes.h"

//This is a BFB, so we need an enum type for the state machine
enum PID_states { STATE_PID_Start, STATE_PID_update, STATE_PID_zero };


union PIDInputEvents {
	struct {
		UDINT Zero;
		UDINT Tick;
		UDINT ActualValueChanged;
	} event;
	
};


union PIDOutputEvents {
	struct {
		UDINT ControlChanged;
	} event;
	
};


typedef struct {
    //input events
	union PIDInputEvents inputEvents;

    //output events
	union PIDOutputEvents outputEvents;

    //input vars
	REAL DesiredValue;
    REAL ActualValue;
    REAL PGain;
    REAL IGain;
    REAL DGain;
    REAL WindupGuard;
    
    //output vars
	REAL Control;
    
	//any internal vars (BFBs only)
    REAL PreviousError;
    REAL IntegrationError;
    
	//any child FBs (CFBs only)
	
	//resource vars
	
	//resources (Devices only)
	
	//state and trigger (BFBs only)
	enum PID_states _state; //stores current state
	BOOL _trigger; //indicates if a state transition has occured this tick
	
} PID_t;

//all FBs get a preinit function
int PID_preinit(PID_t _SPM *me);

//all FBs get an init function
int PID_init(PID_t _SPM *me);

//all FBs get a run function
void PID_run(PID_t _SPM *me);



#endif
