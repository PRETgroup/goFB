-- This file has been automatically generated by go-iec61499-vhdl and should not be edited by hand
-- Converter written by Hammond Pearce and available at github.com/kiwih/go-iec61499-vhdl

-- This file represents the Composite Function Block for FlexPRET

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;



entity FlexPRET is

	port(
		--for clock and reset signal
		clk		: in	std_logic;
		reset	: in	std_logic;
		enable	: in	std_logic;
		sync	: in	std_logic;
		
		
		
		
		
		--special emitted internal variables for child I/O
		UART_TX : out unsigned(7 downto 0); --type was BYTE 
		UART_TX_READY : in std_logic; --type was BOOL 
		UART_TX_SEND : out std_logic; --type was BOOL 
		
		--for done signal
		done : out std_logic
	);

end entity;


architecture rtl of FlexPRET is
	-- Signals needed for event connections 
	signal IO_InjectorArmFinishMovement_conn : std_logic;
	signal IO_EmergencyStopChanged_conn : std_logic;
	signal IO_CanisterPressureChanged_conn : std_logic;
	signal IO_FillContentsAvailableChanged_conn : std_logic;
	signal IO_LasersChanged_conn : std_logic;
	signal IO_DoorOverride_conn : std_logic;
	signal IO_VacuumTimerElapsed_conn : std_logic;
	signal CCounter_CanisterCountChanged_conn : std_logic;
	signal Door_DoorReleaseCanister_conn : std_logic;
	signal Conveyor_ConveyorChanged_conn : std_logic;
	signal Conveyor_ConveyorStoppedForInject_conn : std_logic;
	signal RejectArm_GoRejectArm_conn : std_logic;
	signal Pumps_PumpFinished_conn : std_logic;
	signal Pumps_RejectCanister_conn : std_logic;
	signal Pumps_InjectorControlsChanged_conn : std_logic;
	signal Pumps_FillContentsChanged_conn : std_logic;
	signal Pumps_StartVacuumTimer_conn : std_logic;
	signal Motor_StartPump_conn : std_logic;
	signal Motor_InjectDone_conn : std_logic;
	signal Motor_InjectorPositionChanged_conn : std_logic;

	-- Signals needed for data connections 
	signal IO_EmergencyStop_conn : std_logic; --type was BOOL
	signal IO_CanisterPressure_conn : unsigned(7 downto 0); --type was BYTE
	signal IO_FillContentsAvailable_conn : unsigned(7 downto 0); --type was BYTE
	signal IO_DoorSiteLaser_conn : std_logic; --type was BOOL
	signal IO_InjectSiteLaser_conn : std_logic; --type was BOOL
	signal IO_RejectSiteLaser_conn : std_logic; --type was BOOL
	signal IO_RejectBinLaser_conn : std_logic; --type was BOOL
	signal IO_AcceptBinLaser_conn : std_logic; --type was BOOL
	signal CCounter_CanisterCount_conn : unsigned(7 downto 0); --type was BYTE
	signal Conveyor_ConveyorSpeed_conn : unsigned(7 downto 0); --type was BYTE
	signal Pumps_InjectorContentsValveOpen_conn : std_logic; --type was BOOL
	signal Pumps_InjectorVacuumRun_conn : std_logic; --type was BOOL
	signal Pumps_InjectorPressurePumpRun_conn : std_logic; --type was BOOL
	signal Pumps_FillContents_conn : std_logic; --type was BOOL
	signal Motor_InjectorPosition_conn : unsigned(7 downto 0); --type was BYTE

	-- Signals needed for the done signals 
	signal IO_done : std_logic;
	signal CCounter_done : std_logic;
	signal Door_done : std_logic;
	signal Conveyor_done : std_logic;
	signal RejectArm_done : std_logic;
	signal Pumps_done : std_logic;
	signal Motor_done : std_logic;
begin
	--top level I/O to signals
	
	-- child I/O to signals
	
	IO : entity work.IOManager port map(
		clk => clk,
		reset => reset,
		enable => enable,
		sync => sync,

		--event outputs 
		InjectorArmFinishMovement => IO_InjectorArmFinishMovement_conn,
		EmergencyStopChanged => IO_EmergencyStopChanged_conn,
		CanisterPressureChanged => IO_CanisterPressureChanged_conn,
		FillContentsAvailableChanged => IO_FillContentsAvailableChanged_conn,
		LasersChanged => IO_LasersChanged_conn,
		DoorOverride => IO_DoorOverride_conn,
		VacuumTimerElapsed => IO_VacuumTimerElapsed_conn,
		
		--event inputs
		CanisterCountChanged => CCounter_CanisterCountChanged_conn, 
		DoorReleaseCanister => Door_DoorReleaseCanister_conn, 
		ConveyorChanged => Conveyor_ConveyorChanged_conn, 
		GoRejectArm => RejectArm_GoRejectArm_conn, 
		InjectorControlsChanged => Pumps_InjectorControlsChanged_conn, 
		FillContentsChanged => Pumps_FillContentsChanged_conn, 
		StartVacuumTimer => Pumps_StartVacuumTimer_conn, 
		InjectDone => Motor_InjectDone_conn, 
		InjectorPositionChanged => Motor_InjectorPositionChanged_conn, 
		
		--data outputs
		EmergencyStop_O => IO_EmergencyStop_conn, 
		CanisterPressure_O => IO_CanisterPressure_conn, 
		FillContentsAvailable_O => IO_FillContentsAvailable_conn, 
		DoorSiteLaser_O => IO_DoorSiteLaser_conn, 
		InjectSiteLaser_O => IO_InjectSiteLaser_conn, 
		RejectSiteLaser_O => IO_RejectSiteLaser_conn, 
		RejectBinLaser_O => IO_RejectBinLaser_conn, 
		AcceptBinLaser_O => IO_AcceptBinLaser_conn, 
		
		--data inputs
		CanisterCount_I => CCounter_CanisterCount_conn,
		ConveyorSpeed_I => Conveyor_ConveyorSpeed_conn,
		InjectorContentsValveOpen_I => Pumps_InjectorContentsValveOpen_conn,
		InjectorVacuumRun_I => Pumps_InjectorVacuumRun_conn,
		InjectorPressurePumpRun_I => Pumps_InjectorPressurePumpRun_conn,
		FillContents_I => Pumps_FillContents_conn,
		InjectorPosition_I => Motor_InjectorPosition_conn,
		

		--specials
		UART_TX => UART_TX, --output
		UART_TX_READY => UART_TX_READY, --input
		UART_TX_SEND => UART_TX_SEND, --output
		
		done => IO_done
	);
	
	CCounter : entity work.CanisterCounter port map(
		clk => clk,
		reset => reset,
		enable => enable,
		sync => sync,

		--event outputs 
		CanisterCountChanged => CCounter_CanisterCountChanged_conn,
		
		--event inputs
		LasersChanged => IO_LasersChanged_conn, 
		
		--data outputs
		CanisterCount_O => CCounter_CanisterCount_conn, 
		
		--data inputs
		DoorSiteLaser_I => IO_DoorSiteLaser_conn,
		RejectBinLaser_I => IO_RejectBinLaser_conn,
		AcceptBinLaser_I => IO_AcceptBinLaser_conn,
		

		
		done => CCounter_done
	);
	
	Door : entity work.DoorController port map(
		clk => clk,
		reset => reset,
		enable => enable,
		sync => sync,

		--event outputs 
		DoorReleaseCanister => Door_DoorReleaseCanister_conn,
		
		--event inputs
		EmergencyStopChanged => IO_EmergencyStopChanged_conn, 
		ReleaseDoorOverride => IO_DoorOverride_conn, 
		BottlingDone => Motor_InjectDone_conn, 
		
		--data outputs
		
		--data inputs
		EmergencyStop_I => IO_EmergencyStop_conn,
		

		
		done => Door_done
	);
	
	Conveyor : entity work.ConveyorController port map(
		clk => clk,
		reset => reset,
		enable => enable,
		sync => sync,

		--event outputs 
		ConveyorChanged => Conveyor_ConveyorChanged_conn,
		ConveyorStoppedForInject => Conveyor_ConveyorStoppedForInject_conn,
		
		--event inputs
		EmergencyStopChanged => IO_EmergencyStopChanged_conn, 
		LasersChanged => IO_LasersChanged_conn, 
		InjectDone => Motor_InjectDone_conn, 
		
		--data outputs
		ConveyorSpeed_O => Conveyor_ConveyorSpeed_conn, 
		
		--data inputs
		EmergencyStop_I => IO_EmergencyStop_conn,
		InjectSiteLaser_I => IO_InjectSiteLaser_conn,
		

		
		done => Conveyor_done
	);
	
	RejectArm : entity work.RejectArmController port map(
		clk => clk,
		reset => reset,
		enable => enable,
		sync => sync,

		--event outputs 
		GoRejectArm => RejectArm_GoRejectArm_conn,
		
		--event inputs
		LasersChanged => IO_LasersChanged_conn, 
		RejectCanister => Pumps_RejectCanister_conn, 
		
		--data outputs
		
		--data inputs
		RejectSiteLaser_I => IO_RejectSiteLaser_conn,
		

		
		done => RejectArm_done
	);
	
	Pumps : entity work.InjectorPumpsController port map(
		clk => clk,
		reset => reset,
		enable => enable,
		sync => sync,

		--event outputs 
		PumpFinished => Pumps_PumpFinished_conn,
		RejectCanister => Pumps_RejectCanister_conn,
		InjectorControlsChanged => Pumps_InjectorControlsChanged_conn,
		FillContentsChanged => Pumps_FillContentsChanged_conn,
		StartVacuumTimer => Pumps_StartVacuumTimer_conn,
		
		--event inputs
		EmergencyStopChanged => IO_EmergencyStopChanged_conn, 
		CanisterPressureChanged => IO_CanisterPressureChanged_conn, 
		FillContentsAvailableChanged => IO_FillContentsAvailableChanged_conn, 
		VacuumTimerElapsed => IO_VacuumTimerElapsed_conn, 
		StartPump => Motor_StartPump_conn, 
		
		--data outputs
		InjectorContentsValveOpen_O => Pumps_InjectorContentsValveOpen_conn, 
		InjectorVacuumRun_O => Pumps_InjectorVacuumRun_conn, 
		InjectorPressurePumpRun_O => Pumps_InjectorPressurePumpRun_conn, 
		FillContents_O => Pumps_FillContents_conn, 
		
		--data inputs
		EmergencyStop_I => IO_EmergencyStop_conn,
		CanisterPressure_I => IO_CanisterPressure_conn,
		FillContentsAvailable_I => IO_FillContentsAvailable_conn,
		

		
		done => Pumps_done
	);
	
	Motor : entity work.InjectorMotorController port map(
		clk => clk,
		reset => reset,
		enable => enable,
		sync => sync,

		--event outputs 
		StartPump => Motor_StartPump_conn,
		InjectDone => Motor_InjectDone_conn,
		InjectorPositionChanged => Motor_InjectorPositionChanged_conn,
		
		--event inputs
		InjectorArmFinishedMovement => IO_InjectorArmFinishMovement_conn, 
		EmergencyStopChanged => IO_EmergencyStopChanged_conn, 
		ConveyorStoppedForInject => Conveyor_ConveyorStoppedForInject_conn, 
		PumpFinished => Pumps_PumpFinished_conn, 
		
		--data outputs
		InjectorPosition_O => Motor_InjectorPosition_conn, 
		
		--data inputs
		EmergencyStop_I => IO_EmergencyStop_conn,
		

		
		done => Motor_done
	);
	

	-- done signal
	done <= IO_done and CCounter_done and Door_done and Conveyor_done and RejectArm_done and Pumps_done and Motor_done;
	
end rtl;
