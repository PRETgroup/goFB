// This file has been automatically generated by goFB and should not be edited by hand
// Compiler written by Hammond Pearce and available at github.com/kiwih/goFB

// This file represents the interface of Function Block BfbCheck
#ifndef BFBCHECK_H_
#define BFBCHECK_H_

#include "fbtypes.h"
#include "util.h"



//This is a BFB with states, so we need an enum type for the state machine
enum BfbCheck_states { STATE_BfbCheck_start, STATE_BfbCheck_run };


union BfbCheckInputEvents {
	struct {
		UDINT genE;
	} event;
	
};


union BfbCheckOutputEvents {
	struct {
		UDINT acceptE;
	} event;
	
};


typedef struct {
    //input events
	union BfbCheckInputEvents inputEvents;

    //output events
	union BfbCheckOutputEvents outputEvents;

    //input vars
	INT genDat;
    
    //output vars
	
	//any internal vars (BFBs only)
    INT comp;
    INT i;
    
	//any child FBs (CFBs only)
	
	//resource vars
	
	//resources (Devices only)
	
	//state and trigger (BFBs only)
	enum BfbCheck_states _state; //stores current state
	BOOL _trigger; //indicates if a state transition has occured this tick
	
	
	
} BfbCheck_t;

//all FBs get a preinit function
int BfbCheck_preinit(BfbCheck_t  *me);

//all FBs get an init function
int BfbCheck_init(BfbCheck_t  *me);

//all FBs get a run function
void BfbCheck_run(BfbCheck_t  *me);



#endif
