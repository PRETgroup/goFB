serviceFB LocalCtrl;
interface of LocalCtrl {
    out event op_stay_open;
    out event op_normal;
    out event op_lock;
}

architecture of LocalCtrl {
	in "C";

	arbitrary 
`
#include <stdio.h>
#include <stdlib.h>
`;
	
	in_struct 
`
int last_cmd;
`;
	
	run 
`
int c;
FILE *file;
file = fopen("commands.txt", "r");
if (file) {
	c = getc(file);
    c = getc(file);
	if(c != me->last_cmd && (c == 'o' || c == 'n' || c == 'l')) {
		me->last_cmd = c;
		switch(c) {
			case 'o':
				printf("LocalCtrl: Sending OP_STAY_OPEN\n");
				me->outputEvents.event.op_stay_open = '1';
				break;
			case 'n':
				printf("LocalCtrl: Sending OP_NORMAL\n");
				me->outputEvents.event.op_normal = '1';
				break;
			case 'l':
				printf("LocalCtrl: Sending OP_LOCK\n");
				me->outputEvents.event.op_lock = '1';
				break;
			default:
				printf("LocalCtrl: Unknown command\n");
				break;
		}
	}
	fclose(file);
} else {
	printf("LocalCtrl: Couldn't open local.txt\n");
	while(1);
}
`;

}