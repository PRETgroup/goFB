serviceFB FireAlarm;
interface of FireAlarm {
    out event fire;
    out event clr_fire;
}

architecture of FireAlarm {
	in "C";

	arbitrary 
`
#include <stdio.h>
#include <stdlib.h>
`;
	
	in_struct 
`
int last_cmd;
`;
	
	run 
`
int c;
FILE *file;
file = fopen("commands.txt", "r");
if (file) {
    c = getc(file);
	c = getc(file);
	c = getc(file);
	c = getc(file);
	
	if(c != me->last_cmd) {
		me->last_cmd = c;
		switch(c) {
			case 'f':
				printf("FireAlarm: Sending FIRE\n");
				me->outputEvents.event.fire = '1';
				break;

			default:
				printf("FireAlarm: Sending CLR_FIRE\n");
				me->outputEvents.event.clr_fire = '1';
				break;
		}
	}
    fclose(file);
} else {
	printf("Couldn't open commands.txt\n");
	while(1);
}
`;
}