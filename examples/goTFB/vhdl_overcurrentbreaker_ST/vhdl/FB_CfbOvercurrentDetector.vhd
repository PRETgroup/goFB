-- This file has been automatically generated by goFB and should not be edited by hand
-- Compiler written by Hammond Pearce and available at github.com/kiwih/goFB
-- VHDL support is EXPERIMENTAL ONLY

-- This file represents the Composite Function Block for CfbOvercurrentDetector

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;



entity CfbOvercurrentDetector is

	port(
		--for clock and reset signal
		clk		: in	std_logic;
		reset	: in	std_logic;
		enable	: in	std_logic;
		sync	: in	std_logic;
		
		--input events
		tick_eI : in std_logic := '0';
		i_measured_eI : in std_logic := '0';
		test_eI : in std_logic := '0';
		set_eI : in std_logic := '0';
		iSet_change_eI : in std_logic := '0';
		
		
		--output events
		b_change_eO : out std_logic;
		
		
		--input variables
		i_I : in unsigned(31 downto 0) := (others => '0'); --type was ULINT
		iSet_I : in unsigned(31 downto 0) := (others => '0'); --type was ULINT
		
		
		--output variables
		b_O : out std_logic; --type was BOOL
		
		
		--for done signal
		done : out std_logic
	);

end entity;


architecture rtl of CfbOvercurrentDetector is
	-- Signals needed for event connections 
	signal tick_conn : std_logic;
	signal i_measured_conn : std_logic;
	signal iSet_change_conn : std_logic;
	signal test_conn : std_logic;
	signal set_conn : std_logic;
	signal curve_unsafe_conn : std_logic;
	signal sr_b_change_conn : std_logic;

	-- Signals needed for data connections 
	signal i_conn : unsigned(31 downto 0); --type was ULINT
	signal iSet_conn : unsigned(31 downto 0); --type was ULINT
	signal sr_b_conn : std_logic; --type was BOOL

	-- Signals needed for the done signals 
	signal sr_done : std_logic;
	signal curve_done : std_logic;
begin
	--top level I/O to signals
	--input events
	tick_conn <= tick_eI;
	i_measured_conn <= i_measured_eI;
	test_conn <= test_eI;
	set_conn <= set_eI;
	iSet_change_conn <= iSet_change_eI;
	
	--output events
	b_change_eO <= sr_b_change_conn;
	
	--input variables
	i_conn <= i_I;
	iSet_conn <= iSet_I;
	
	--output events
	b_O <= sr_b_conn;
	
	
	-- child I/O to signals
	
	sr : entity work.BfbSetterResetter port map(
		clk => clk,
		reset => reset,
		enable => enable,
		sync => sync,

		--event outputs 
		b_change_eO => sr_b_change_conn,
		
		--event inputs
		test_eI => test_conn, 
		set_eI => set_conn, 
		unsafe_eI => curve_unsafe_conn, 
		
		--data outputs
		b_O => sr_b_conn, 
		
		--data inputs
		

		
		done => sr_done
	);
	
	curve : entity work.BfbIDMTCurve port map(
		clk => clk,
		reset => reset,
		enable => enable,
		sync => sync,

		--event outputs 
		unsafe_eO => curve_unsafe_conn,
		
		--event inputs
		tick_eI => tick_conn, 
		i_measured_eI => i_measured_conn, 
		iSet_change_eI => iSet_change_conn, 
		
		--data outputs
		
		--data inputs
		i_I => i_conn,
		iSet_I => iSet_conn,
		

		
		done => curve_done
	);
	

	-- done signal
	done <= sr_done and curve_done;
	
end rtl;
