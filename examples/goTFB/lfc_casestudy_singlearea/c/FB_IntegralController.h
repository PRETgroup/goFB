// This file has been automatically generated by goFB and should not be edited by hand
// Compiler written by Hammond Pearce and available at github.com/kiwih/goFB

// This file represents the interface of Function Block IntegralController
#ifndef INTEGRALCONTROLLER_H_
#define INTEGRALCONTROLLER_H_

#include "fbtypes.h"
#include "util.h"



//This is a BFB with states, so we need an enum type for the state machine
enum IntegralController_states { STATE_IntegralController_update };




union IntegralControllerInputEvents {
	struct {
		UDINT Tick;
		UDINT DfChange;
	} event;
	
};


union IntegralControllerOutputEvents {
	struct {
		UDINT DprefChange;
	} event;
	
};


typedef struct {
    //input events
	union IntegralControllerInputEvents inputEvents;

    //output events
	union IntegralControllerOutputEvents outputEvents;

    //input vars
	LREAL Df;
    
    //output vars
	LREAL Dpref;
    
	//any internal vars (BFBs only)
    LREAL StepSize;
    LREAL Ki;
    
	//any child FBs (CFBs only)
	
	//resource vars
	
	//resources (Devices only)
	
	//state and trigger (BFBs only)
	enum IntegralController_states _state; //stores current state
	BOOL _trigger; //indicates if a state transition has occured this tick
	
	
	

	

} IntegralController_t;

//all FBs get a preinit function
int IntegralController_preinit(IntegralController_t  *me);

//all FBs get an init function
int IntegralController_init(IntegralController_t  *me);

//all FBs get a run function
void IntegralController_run(IntegralController_t  *me);



#endif
