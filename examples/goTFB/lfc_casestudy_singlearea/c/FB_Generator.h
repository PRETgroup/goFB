// This file has been automatically generated by goFB and should not be edited by hand
// Compiler written by Hammond Pearce and available at github.com/kiwih/goFB

// This file represents the interface of Function Block Generator
#ifndef GENERATOR_H_
#define GENERATOR_H_

#include "fbtypes.h"
#include "util.h"



//This is a BFB with states, so we need an enum type for the state machine
enum Generator_states { STATE_Generator_update };




union GeneratorInputEvents {
	struct {
		UDINT Tick;
		UDINT DprefChange;
		UDINT DpeChange;
	} event;
	
};


union GeneratorOutputEvents {
	struct {
		UDINT DfDptDphChange;
	} event;
	
};


typedef struct {
    //input events
	union GeneratorInputEvents inputEvents;

    //output events
	union GeneratorOutputEvents outputEvents;

    //input vars
	LREAL Dpref;
    LREAL Dpe;
    
    //output vars
	LREAL Df;
    LREAL Dpt;
    LREAL Dph;
    
	//any internal vars (BFBs only)
    LREAL StepSize;
    LREAL Kh;
    LREAL Kt;
    LREAL Kp;
    LREAL Th;
    LREAL Tt;
    LREAL Tp;
    LREAL R;
    
	//any child FBs (CFBs only)
	
	//resource vars
	
	//resources (Devices only)
	
	//state and trigger (BFBs only)
	enum Generator_states _state; //stores current state
	BOOL _trigger; //indicates if a state transition has occured this tick
	
	
	

	

} Generator_t;

//all FBs get a preinit function
int Generator_preinit(Generator_t  *me);

//all FBs get an init function
int Generator_init(Generator_t  *me);

//all FBs get a run function
void Generator_run(Generator_t  *me);



#endif
