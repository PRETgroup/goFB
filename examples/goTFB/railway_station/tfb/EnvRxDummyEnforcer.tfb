compositeFB EnvRxDummyEnforcer;
interface of EnvRxDummyEnforcer {
    in event SoChange;
    in bool SoGrn := false;

    in event SChange_in;
    in bool SiGrn_in := false;
    in bool SnGrn_in := false;
    in bool SsGrn_in := false;

    in event WChange_in;
    in bool WiDvrg_in := false;
    in bool WoDvrg_in := false;
    in bool WnDvrg_in := false;
    in bool WsDvrg_in := false;

    in event DChange_in; 
    in bool DwiPrs_in := false;
    in bool DwoPrs_in := false;
    in bool DwnPrs_in := false;
    in bool DwsPrs_in := false;
    in bool DnPrs_in := false;
    in bool DsPrs_in := false;

	out event EnforcerAbortedAction; //let the controller know it done bad

	out event SChange_out;
    out bool SiGrn_out := false;
    out bool SnGrn_out := false;
    out bool SsGrn_out := false;

    out event WChange_out;
    out bool WiDvrg_out := false;
    out bool WoDvrg_out := false;
    out bool WnDvrg_out := false;
    out bool WsDvrg_out := false;
}

architecture of EnvRxDummyEnforcer {
    events {
        SChange_out <- SChange_in;
        WChange_out <- WChange_in;
    }

    data {
        SiGrn_out <- SiGrn_in;
        SnGrn_out <- SnGrn_in;
        SsGrn_out <- SsGrn_in;

        WiDvrg_out <- WiDvrg_in;
        WoDvrg_out <- WoDvrg_in;
        WnDvrg_out <- WnDvrg_in;
        WsDvrg_out <- WsDvrg_in;
    }
}