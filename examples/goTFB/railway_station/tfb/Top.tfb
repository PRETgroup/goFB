compositeFB Top;
interface of Top {

}

architecture of Top {
    instances {
        TrainCtrl ctrl;
        EnvRxSystemTx erx;
        EnvTxSystemRx etx;
    }

    events {
        ctrl.RChange <- etx.RChange;
        
        ctrl.DChange <- etx.DChange;

        erx.SChange <- ctrl.SChange;

        erx.WChange <- ctrl.WChange;

        erx.DChangeD <- etx.DChange; //D for Display
    }

    data {
        ctrl.RiReq <- etx.RiReq;
        ctrl.RnReq <- etx.RnReq;
        ctrl.RsReq <- etx.RsReq;

        ctrl.DwiPrs <- etx.DwiPrs;
        ctrl.DwoPrs <- etx.DwoPrs;
        ctrl.DwnPrs <- etx.DwnPrs;
        ctrl.DwsPrs <- etx.DwsPrs;
        ctrl.DnPrs <- etx.DnPrs;
        ctrl.DsPrs <- etx.DsPrs;

        erx.SiGrn <- ctrl.SiGrn;
        erx.SoGrn <- ctrl.SoGrn;
        erx.SniGrn <- ctrl.SniGrn;
        erx.SnoGrn <- ctrl.SnoGrn;
        erx.SsiGrn <- ctrl.SsiGrn;
        erx.SsoGrn <- ctrl.SsoGrn;
        erx.WiDvrg <- ctrl.WiDvrg;
        erx.WoDvrg <- ctrl.WoDvrg;
        erx.WnDvrg <- ctrl.WnDvrg;
        erx.WsDvrg <- ctrl.WsDvrg;

        erx.DwiPrsD <- etx.DwiPrs;
        erx.DwoPrsD <- etx.DwoPrs;
        erx.DwnPrsD <- etx.DwnPrs;
        erx.DwsPrsD <- etx.DwsPrs;
        erx.DnPrsD <- etx.DnPrs;
        erx.DsPrsD <- etx.DsPrs; 
    }
}