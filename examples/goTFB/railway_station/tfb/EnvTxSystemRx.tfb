serviceFB EnvTxSystemRx;
interface of EnvTxSystemRx {
	out event RChange;
	out bool initial false RiReq with RChange;
	out bool initial false RnReq with RChange;
	out bool initial false RsReq with RChange;

	out event DChange;
    out bool initial false DwiPrs with DChange;
    out bool initial false DwoPrs with DChange;
    out bool initial false DwnPrs with DChange;
    out bool initial false DwsPrs with DChange;
    out bool initial false DnPrs with DChange;
    out bool initial false DsPrs with DChange;
}

architecture of EnvTxSystemRx {
	in "C";

	arbitrary 
`
#include <stdio.h>
#include <stdlib.h>
`;
	
	in_struct 
`
int last_RiReq, last_RnReq, last_RsReq, last_DwiPrs, last_DwoPrs, last_DwnPrs, last_DwsPrs, last_DnPrs, last_DsPrs;
`;
	
	run 
`
FILE *file;
file = fopen("commands.txt", "r");
if (file) {
	int c;

	c = getc(file);
	if(c != me->last_RiReq && (c == '-' || c == 'r')) {
		me->last_RiReq = c;
		me->outputEvents.event.RChange = 1;
		me->RiReq = (c == 'r');
		printf("EnvTxSystemRx: RiReq event and set to %i\r\n", me->RiReq);
	}

	c = getc(file);
	if(c != me->last_RnReq && (c == '-' || c == 'r')) {
		me->last_RnReq = c;
		me->outputEvents.event.RChange = 1;
		me->RnReq = (c == 'r');
		printf("EnvTxSystemRx: RnReq event and set to %i\r\n", me->RnReq);
	}

	c = getc(file);
	if(c != me->last_RsReq && (c == '-' || c == 'r')) {
		me->last_RsReq = c;
		me->outputEvents.event.RChange = 1;
		me->RsReq = (c == 'r');
		printf("EnvTxSystemRx: RsReq event and set to %i\r\n", me->RsReq);
	}

	//get rid of space
	c = getc(file);
	
	c = getc(file);
	if(c != me->last_DwiPrs && (c == '-' || c == 'p')) {
		me->last_DwiPrs = c;
		me->outputEvents.event.DChange = 1;
		me->DwiPrs = (c == 'p');
		printf("EnvTxSystemRx: DwiPrs event and set to %i\r\n", me->DwiPrs);
	}

	c = getc(file);
	if(c != me->last_DwoPrs && (c == '-' || c == 'p')) {
		me->last_DwoPrs = c;
		me->outputEvents.event.DChange = 1;
		me->DwoPrs = (c == 'p');
		printf("EnvTxSystemRx: DwoPrs event and set to %i\r\n", me->DwoPrs);
	}

	c = getc(file);
	if(c != me->last_DwnPrs && (c == '-' || c == 'p')) {
		me->last_DwnPrs = c;
		me->outputEvents.event.DChange = 1;
		me->DwnPrs = (c == 'p');
		printf("EnvTxSystemRx: DwnPrs event and set to %i\r\n", me->DwnPrs);
	}

	c = getc(file);
	if(c != me->last_DwsPrs && (c == '-' || c == 'p')) {
		me->last_DwsPrs = c;
		me->outputEvents.event.DChange = 1;
		me->DwsPrs = (c == 'p');
		printf("EnvTxSystemRx: DwsPrs event and set to %i\r\n", me->DwsPrs);
	}

	c = getc(file);
	if(c != me->last_DnPrs && (c == '-' || c == 'p')) {
		me->last_DnPrs = c;
		me->outputEvents.event.DChange = 1;
		me->DnPrs = (c == 'p');
		printf("EnvTxSystemRx: DnPrs event and set to %i\r\n", me->DnPrs);
	}

	c = getc(file);
	if(c != me->last_DsPrs && (c == '-' || c == 'p')) {
		me->last_DsPrs = c;
		me->outputEvents.event.DChange = 1;
		me->DsPrs = (c == 'p');
		printf("EnvTxSystemRx: DsPrs event and set to %i\r\n", me->DsPrs);
	}
	
    fclose(file);
} else {
	printf("EnvTxSystemRx: Couldn't open commands.txt\n");
	while(1);
}
`;
	
}