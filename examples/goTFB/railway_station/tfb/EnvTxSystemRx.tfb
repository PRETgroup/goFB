serviceFB EnvTxSystemRx;
interface of EnvTxSystemRx {
    out event RiChange;
    out with RiChange bool RiReq := false;

    out event RnChange;
    out with RnChange bool RnReq := false;

    out event RsChange;
    out with RsChange bool RsReq := false;

    out event DwiChange;
    out with DwiChange bool DwiPrs := false;

    out event DwoChange;
    out with DwoChange bool DwoPrs := false;

    out event DwnChange;
    out with DwnChange bool DwnPrs := false;

    out event DwsChange;
    out with DwsChange bool DwsPrs := false;

    out event DnChange;
    out with DnChange bool DnPrs := false;

    out event DsChange;
    out with DsChange bool DsPrs := false;

    out event SoChange;
    out with SoChange bool SoGrn := false;

    out event SysReady;
}

architecture of EnvTxSystemRx {
    in "C";

    arbitrary 
`
#include <stdio.h>
#include <stdlib.h>
`;
    
    in_struct 
`
int last_RiReq, last_RnReq, last_RsReq, last_DwiPrs, last_DwoPrs, last_DwnPrs, last_DwsPrs, last_DnPrs, last_DsPrs, last_SoGrn;
int initialised;
`;
    
    run 
`
FILE *file;
file = fopen("commands.txt", "r");
if (file) {
    int c;

    c = getc(file);
    if(c != me->last_DwiPrs && (c == '-' || c == 'p')) {
        me->last_DwiPrs = c;
        //if(me->initialised) {
            me->outputEvents.event.DwiChange = 1;
            PushEvent(me->myInstanceID, 3);
        //}
        me->DwiPrs = (c == 'p');
        printf("EnvTxSystemRx: DwiPrs event and set to %i\r\n", me->DwiPrs);
    }

    c = getc(file);
    if(c != me->last_DwoPrs && (c == '-' || c == 'p')) {
        me->last_DwoPrs = c;
        //if(me->initialised) {
            me->outputEvents.event.DwoChange = 1;
            PushEvent(me->myInstanceID, 4);
        //}
        me->DwoPrs = (c == 'p');
        printf("EnvTxSystemRx: DwoPrs event and set to %i\r\n", me->DwoPrs);
    }

    c = getc(file);
    if(c != me->last_DwnPrs && (c == '-' || c == 'p')) {
        me->last_DwnPrs = c;
        //if(me->initialised) {
            me->outputEvents.event.DwnChange = 1;
            PushEvent(me->myInstanceID, 5);
        //}
        me->DwnPrs = (c == 'p');
        printf("EnvTxSystemRx: DwnPrs event and set to %i\r\n", me->DwnPrs);
    }

    c = getc(file);
    if(c != me->last_DwsPrs && (c == '-' || c == 'p')) {
        me->last_DwsPrs = c;
        //if(me->initialised) {
            me->outputEvents.event.DwsChange = 1;
            PushEvent(me->myInstanceID, 6);
        //}
        me->DwsPrs = (c == 'p');
        printf("EnvTxSystemRx: DwsPrs event and set to %i\r\n", me->DwsPrs);
    }

    c = getc(file);
    if(c != me->last_DnPrs && (c == '-' || c == 'p')) {
        me->last_DnPrs = c;
        //if(me->initialised) {
            me->outputEvents.event.DnChange = 1;
            PushEvent(me->myInstanceID, 7);
        //}
        me->DnPrs = (c == 'p');
        printf("EnvTxSystemRx: DnPrs event and set to %i\r\n", me->DnPrs);
    }

    c = getc(file);
    if(c != me->last_DsPrs && (c == '-' || c == 'p')) {
        me->last_DsPrs = c;
        //if(me->initialised) {
            me->outputEvents.event.DsChange = 1;
            PushEvent(me->myInstanceID, 8);
        //}
        me->DsPrs = (c == 'p');
        printf("EnvTxSystemRx: DsPrs event and set to %i\r\n", me->DsPrs);
    }    

    //get rid of space
    c = getc(file);

    c = getc(file);
    if(c != me->last_RiReq && (c == '-' || c == 'r')) {
        me->last_RiReq = c;
        //if(me->initialised) {
            me->outputEvents.event.RiChange = 1;
            PushEvent(me->myInstanceID, 0);
        //}
        me->RiReq = (c == 'r');
        printf("EnvTxSystemRx: RiReq event and set to %i\r\n", me->RiReq);
    }

    c = getc(file);
    if(c != me->last_RnReq && (c == '-' || c == 'r')) {
        me->last_RnReq = c;
        //if(me->initialised) {
            me->outputEvents.event.RnChange = 1;
            PushEvent(me->myInstanceID, 1);
        //}
        me->RnReq = (c == 'r');
        printf("EnvTxSystemRx: RnReq event and set to %i\r\n", me->RnReq);
    }

    c = getc(file);
    if(c != me->last_RsReq && (c == '-' || c == 'r')) {
        me->last_RsReq = c;
        //if(me->initialised) {
            me->outputEvents.event.RsChange = 1;
            PushEvent(me->myInstanceID, 2);
        //}
        me->RsReq = (c == 'r');
        printf("EnvTxSystemRx: RsReq event and set to %i\r\n", me->RsReq);
    }

    //get rid of space
    c = getc(file);

    c = getc(file);
    if(c != me->last_SoGrn && (c == 'r' || c == 'g')) {
        me->last_SoGrn = c;
        //if(me->initialised) {
            me->outputEvents.event.SoChange = 1;
            PushEvent(me->myInstanceID, 9);
        //}
        me->SoGrn = (c == 'g');
        printf("EnvTxSystemRx: SoChange event and set to %i\r\n", me->SoGrn);
    }

    if(me->initialised == 0) {
        me->initialised = 1;
        me->outputEvents.event.SysReady = 1;
        PushEvent(me->myInstanceID, 10);
    }
    
    
    fclose(file);
} else {
    printf("EnvTxSystemRx: Couldn't open commands.txt\n");
    while(1);
}
`;
    
}