-- This file has been automatically generated by go-iec61499-vhdl and should not be edited by hand
-- Converter written by Hammond Pearce and available at github.com/kiwih/go-iec61499-vhdl

-- This file represents the Composite Function Block for InjectorController

library ieee;
use ieee.std_logic_1164.all;


entity InjectorController is

	port(
		--for clock and reset signal
		clk		: in	std_logic;
		reset	: in	std_logic;
		enable	: in	std_logic;
		
		--input events
		InjectorArmFinishedMovement : in std_logic;
		EmergencyStopChanged : in std_logic;
		CanisterPressureChanged : in std_logic;
		FillContentsAvailableChanged : in std_logic;
		ConveyorStoppedForInject : in std_logic;
		VacuumTimerElapsed : in std_logic;
		
		
		--output events
		InjectDone : out std_logic;
		InjectorPositionChanged : out std_logic;
		InjectorControlsChanged : out std_logic;
		RejectCanister : out std_logic;
		FillContentsChanged : out std_logic;
		StartVacuumTimer : out std_logic;
		InjectRunning : out std_logic;
		
		
		--input variables
		EmergencyStop_I : in std_logic; --type was BOOL, _I to indicate unprocessed input
		CanisterPressure_I : in std_logic_vector(7 downto 0); --type was BYTE, _I to indicate unprocessed input
		FillContentsAvailable_I : in std_logic_vector(7 downto 0); --type was BYTE, _I to indicate unprocessed input
		
		
		--output variables
		InjectorPosition : out std_logic_vector(7 downto 0); --type was BYTE
		InjectorContentsValveOpen : out std_logic; --type was BOOL
		InjectorVacuumRun : out std_logic; --type was BOOL
		InjectorPressurePumpRun : out std_logic; --type was BOOL
		FillContents : out std_logic; --type was BOOL
		
		
		--for done signal
		done : out std_logic
	);

end entity;


architecture rtl of InjectorController is
	-- Signals needed for event connections 
	signal InjectorArmFinishedMovement_to_Arm_InjectorArmFinishedMovement : std_logic;
	signal EmergencyStopChanged_to_Arm_EmergencyStopChanged : std_logic;
	signal EmergencyStopChanged_to_Pumps_EmergencyStopChanged : std_logic;
	signal CanisterPressureChanged_to_Pumps_CanisterPressureChanged : std_logic;
	signal FillContentsAvailableChanged_to_Pumps_FillContentsAvailableChanged : std_logic;
	signal ConveyorStoppedForInject_to_Arm_ConveyorStoppedForInject : std_logic;
	signal VacuumTimerElapsed_to_Pumps_VacuumTimerElapsed : std_logic;
	signal Arm_InjectDone_to_InjectDone : std_logic;
	signal Arm_InjectorPositionChanged_to_InjectorPositionChanged : std_logic;
	signal Pumps_InjectorControlsChanged_to_InjectorControlsChanged : std_logic;
	signal Pumps_RejectCanister_to_RejectCanister : std_logic;
	signal Pumps_FillContentsChanged_to_FillContentsChanged : std_logic;
	signal Pumps_StartVacuumTimer_to_StartVacuumTimer : std_logic;
	signal Arm_InjectRunning_to_InjectRunning : std_logic;
	signal Arm_StartPump_to_Pumps_StartPump : std_logic;
	signal Pumps_PumpFinished_to_Arm_PumpFinished : std_logic;

	-- Signals needed for data connections 
	signal EmergencyStop_to_Arm_EmergencyStop : std_logic; --type was BOOL
	signal EmergencyStop_to_Pumps_EmergencyStop : std_logic; --type was BOOL
	signal CanisterPressure_to_Pumps_CanisterPressure : std_logic_vector(7 downto 0); --type was BYTE
	signal FillContentsAvailable_to_Pumps_FillContentsAvailable : std_logic_vector(7 downto 0); --type was BYTE
	signal Arm_InjectorPosition_to_InjectorPosition : std_logic_vector(7 downto 0); --type was BYTE
	signal Pumps_InjectorContentsValveOpen_to_InjectorContentsValveOpen : std_logic; --type was BOOL
	signal Pumps_InjectorVacuumRun_to_InjectorVacuumRun : std_logic; --type was BOOL
	signal Pumps_InjectorPressurePumpRun_to_InjectorPressurePumpRun : std_logic; --type was BOOL
	signal Pumps_FillContents_to_FillContents : std_logic; --type was BOOL

	-- Signals needed for the done signals 
	signal Arm_done : std_logic;
	signal Pumps_done : std_logic;
begin
	--top level I/O to signals
	--input events
	InjectorArmFinishedMovement_to_Arm_InjectorArmFinishedMovement <= InjectorArmFinishedMovement;
	EmergencyStopChanged_to_Arm_EmergencyStopChanged <= EmergencyStopChanged;
	EmergencyStopChanged_to_Pumps_EmergencyStopChanged <= EmergencyStopChanged;
	CanisterPressureChanged_to_Pumps_CanisterPressureChanged <= CanisterPressureChanged;
	FillContentsAvailableChanged_to_Pumps_FillContentsAvailableChanged <= FillContentsAvailableChanged;
	ConveyorStoppedForInject_to_Arm_ConveyorStoppedForInject <= ConveyorStoppedForInject;
	VacuumTimerElapsed_to_Pumps_VacuumTimerElapsed <= VacuumTimerElapsed;
	
	--output events
	InjectDone <= Arm_InjectDone_to_InjectDone;
	InjectorPositionChanged <= Arm_InjectorPositionChanged_to_InjectorPositionChanged;
	InjectorControlsChanged <= Pumps_InjectorControlsChanged_to_InjectorControlsChanged;
	RejectCanister <= Pumps_RejectCanister_to_RejectCanister;
	FillContentsChanged <= Pumps_FillContentsChanged_to_FillContentsChanged;
	StartVacuumTimer <= Pumps_StartVacuumTimer_to_StartVacuumTimer;
	InjectRunning <= Arm_InjectRunning_to_InjectRunning;
	
	--input variables
	EmergencyStop_to_Arm_EmergencyStop <= EmergencyStop;
	EmergencyStop_to_Pumps_EmergencyStop <= EmergencyStop;
	CanisterPressure_to_Pumps_CanisterPressure <= CanisterPressure;
	FillContentsAvailable_to_Pumps_FillContentsAvailable <= FillContentsAvailable;
	
	--output events
	InjectorPosition <= Arm_InjectorPosition_to_InjectorPosition;
	InjectorContentsValveOpen <= Pumps_InjectorContentsValveOpen_to_InjectorContentsValveOpen;
	InjectorVacuumRun <= Pumps_InjectorVacuumRun_to_InjectorVacuumRun;
	InjectorPressurePumpRun <= Pumps_InjectorPressurePumpRun_to_InjectorPressurePumpRun;
	FillContents <= Pumps_FillContents_to_FillContents;
	
	
	-- child I/O to signals
	
	Arm : entity work.InjectorMotorController port map(
		clk => clk,
		rst => rst,
		enable => enable,

		--events
		InjectorArmFinishedMovement => InjectorArmFinishedMovement_to_Arm_InjectorArmFinishedMovement, --input
		EmergencyStopChanged => EmergencyStopChanged_to_Arm_EmergencyStopChanged, --input
		ConveyorStoppedForInject => ConveyorStoppedForInject_to_Arm_ConveyorStoppedForInject, --input
		InjectDone => Arm_InjectDone_to_InjectDone, --output
		InjectorPositionChanged => Arm_InjectorPositionChanged_to_InjectorPositionChanged, --output
		InjectRunning => Arm_InjectRunning_to_InjectRunning, --output
		StartPump => Arm_StartPump_to_Pumps_StartPump, --output
		PumpFinished => Pumps_PumpFinished_to_Arm_PumpFinished, --input
		
		--data
		EmergencyStop => EmergencyStop_to_Arm_EmergencyStop, --input
		InjectorPosition => Arm_InjectorPosition_to_InjectorPosition, --output 
		
		

		done => Arm_done
	);
	
	Pumps : entity work.InjectorPumpsController port map(
		clk => clk,
		rst => rst,
		enable => enable,

		--events
		EmergencyStopChanged => EmergencyStopChanged_to_Pumps_EmergencyStopChanged, --input
		CanisterPressureChanged => CanisterPressureChanged_to_Pumps_CanisterPressureChanged, --input
		FillContentsAvailableChanged => FillContentsAvailableChanged_to_Pumps_FillContentsAvailableChanged, --input
		VacuumTimerElapsed => VacuumTimerElapsed_to_Pumps_VacuumTimerElapsed, --input
		InjectorControlsChanged => Pumps_InjectorControlsChanged_to_InjectorControlsChanged, --output
		RejectCanister => Pumps_RejectCanister_to_RejectCanister, --output
		FillContentsChanged => Pumps_FillContentsChanged_to_FillContentsChanged, --output
		StartVacuumTimer => Pumps_StartVacuumTimer_to_StartVacuumTimer, --output
		StartPump => Arm_StartPump_to_Pumps_StartPump, --input
		PumpFinished => Pumps_PumpFinished_to_Arm_PumpFinished, --output
		
		--data
		EmergencyStop => EmergencyStop_to_Pumps_EmergencyStop, --input
		CanisterPressure => CanisterPressure_to_Pumps_CanisterPressure, --input
		FillContentsAvailable => FillContentsAvailable_to_Pumps_FillContentsAvailable, --input
		InjectorContentsValveOpen => Pumps_InjectorContentsValveOpen_to_InjectorContentsValveOpen, --output 
		InjectorVacuumRun => Pumps_InjectorVacuumRun_to_InjectorVacuumRun, --output 
		InjectorPressurePumpRun => Pumps_InjectorPressurePumpRun_to_InjectorPressurePumpRun, --output 
		FillContents => Pumps_FillContents_to_FillContents, --output 
		
		

		done => Pumps_done
	);
	

	-- done signal
	done <= Arm_done and Pumps_done;
	
end rtl;
