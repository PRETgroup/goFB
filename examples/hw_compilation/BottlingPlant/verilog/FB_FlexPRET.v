// This file has been automatically generated by goFB and should not be edited by hand
// Compiler written by Hammond Pearce and available at github.com/kiwih/goFB
// Verilog support is EXPERIMENTAL ONLY

// This file represents the Composite Function Block for FlexPRET

module FB_FlexPRET 

(
		input wire clk,
		
		//input events
		input wire InjectorArmFinishMovement_eI,
		input wire EmergencyStopChanged_eI,
		input wire CanisterPressureChanged_eI,
		input wire FillContentsAvailableChanged_eI,
		input wire LasersChanged_eI,
		input wire DoorOverride_eI,
		input wire VacuumTimerElapsed_eI,
		
		//output events
		output wire DoorReleaseCanister_eO,
		output wire ConveyorChanged_eO,
		output wire InjectorPositionChanged_eO,
		output wire InjectorControlsChanged_eO,
		output wire FillContentsChanged_eO,
		output wire StartVacuumTimer_eO,
		output wire GoRejectArm_eO,
		output wire CanisterCountChanged_eO,
		output wire InjectDone_eO,
		
		//input variables
		input wire  EmergencyStop_I,
		input wire [7:0] CanisterPressure_I,
		input wire [7:0] FillContentsAvailable_I,
		input wire  DoorSiteLaser_I,
		input wire  InjectSiteLaser_I,
		input wire  RejectSiteLaser_I,
		input wire  RejectBinLaser_I,
		input wire  AcceptBinLaser_I,
		
		//output variables
		output wire [7:0] ConveyorSpeed_O ,
		output wire [7:0] InjectorPosition_O ,
		output wire  InjectorContentsValveOpen_O ,
		output wire  InjectorVacuumRun_O ,
		output wire  InjectorPressurePumpRun_O ,
		output wire  FillContents_O ,
		output wire [7:0] CanisterCount_O ,
		

		input reset
);


//Wires needed for event connections 
wire InjectorArmFinishMovement_conn;
wire EmergencyStopChanged_conn;
wire CanisterPressureChanged_conn;
wire FillContentsAvailableChanged_conn;
wire LasersChanged_conn;
wire DoorOverride_conn;
wire VacuumTimerElapsed_conn;
wire CCounter_CanisterCountChanged_conn;
wire Door_DoorReleaseCanister_conn;
wire Injector_InjectDone_conn;
wire Injector_InjectorPositionChanged_conn;
wire Injector_InjectorControlsChanged_conn;
wire Injector_RejectCanister_conn;
wire Injector_FillContentsChanged_conn;
wire Injector_StartVacuumTimer_conn;
wire Conveyor_ConveyorChanged_conn;
wire Conveyor_ConveyorStoppedForInject_conn;
wire RejectArm_GoRejectArm_conn;


//Wires needed for data connections 
wire  EmergencyStop_conn;
wire [7:0] CanisterPressure_conn;
wire [7:0] FillContentsAvailable_conn;
wire  DoorSiteLaser_conn;
wire  InjectSiteLaser_conn;
wire  RejectSiteLaser_conn;
wire  RejectBinLaser_conn;
wire  AcceptBinLaser_conn;
wire [7:0] CCounter_CanisterCount_conn;
wire [7:0] Injector_InjectorPosition_conn;
wire  Injector_InjectorContentsValveOpen_conn;
wire  Injector_InjectorVacuumRun_conn;
wire  Injector_InjectorPressurePumpRun_conn;
wire  Injector_FillContents_conn;
wire [7:0] Conveyor_ConveyorSpeed_conn;


//top level I/O to signals
//input events
assign InjectorArmFinishMovement_conn = InjectorArmFinishMovement_eI;
assign EmergencyStopChanged_conn = EmergencyStopChanged_eI;
assign EmergencyStopChanged_conn = EmergencyStopChanged_eI;
assign EmergencyStopChanged_conn = EmergencyStopChanged_eI;
assign CanisterPressureChanged_conn = CanisterPressureChanged_eI;
assign FillContentsAvailableChanged_conn = FillContentsAvailableChanged_eI;
assign LasersChanged_conn = LasersChanged_eI;
assign LasersChanged_conn = LasersChanged_eI;
assign LasersChanged_conn = LasersChanged_eI;
assign DoorOverride_conn = DoorOverride_eI;
assign VacuumTimerElapsed_conn = VacuumTimerElapsed_eI;

//output events
assign DoorReleaseCanister_eO = Door_DoorReleaseCanister_conn;
assign ConveyorChanged_eO = Conveyor_ConveyorChanged_conn;
assign InjectorPositionChanged_eO = Injector_InjectorPositionChanged_conn;
assign InjectorControlsChanged_eO = Injector_InjectorControlsChanged_conn;
assign FillContentsChanged_eO = Injector_FillContentsChanged_conn;
assign StartVacuumTimer_eO = Injector_StartVacuumTimer_conn;
assign GoRejectArm_eO = RejectArm_GoRejectArm_conn;
assign CanisterCountChanged_eO = CCounter_CanisterCountChanged_conn;

//input variables
assign EmergencyStop_conn = EmergencyStop_I;
assign EmergencyStop_conn = EmergencyStop_I;
assign EmergencyStop_conn = EmergencyStop_I;
assign CanisterPressure_conn = CanisterPressure_I;
assign FillContentsAvailable_conn = FillContentsAvailable_I;
assign DoorSiteLaser_conn = DoorSiteLaser_I;
assign InjectSiteLaser_conn = InjectSiteLaser_I;
assign RejectSiteLaser_conn = RejectSiteLaser_I;
assign RejectBinLaser_conn = RejectBinLaser_I;
assign AcceptBinLaser_conn = AcceptBinLaser_I;

//output events
assign ConveyorSpeed_O = Conveyor_ConveyorSpeed_conn;
assign InjectorPosition_O = Injector_InjectorPosition_conn;
assign InjectorContentsValveOpen_O = Injector_InjectorContentsValveOpen_conn;
assign InjectorVacuumRun_O = Injector_InjectorVacuumRun_conn;
assign InjectorPressurePumpRun_O = Injector_InjectorPressurePumpRun_conn;
assign FillContents_O = Injector_FillContents_conn;
assign CanisterCount_O = CCounter_CanisterCount_conn;



// child I/O to signals

FB_CanisterCounter CCounter (
	.clk(clk),

	//event outputs 
	.CanisterCountChanged_eO(CCounter_CanisterCountChanged_conn),
	
	//event inputs
	.LasersChanged_eI(LasersChanged_conn), 
	
	//data outputs
	.CanisterCount_O(CCounter_CanisterCount_conn), 
	
	//data inputs
	.DoorSiteLaser_I(DoorSiteLaser_conn),
	.RejectBinLaser_I(RejectBinLaser_conn),
	.AcceptBinLaser_I(AcceptBinLaser_conn),
	
	
	.reset(reset)
);

FB_DoorController Door (
	.clk(clk),

	//event outputs 
	.DoorReleaseCanister_eO(Door_DoorReleaseCanister_conn),
	
	//event inputs
	.EmergencyStopChanged_eI(EmergencyStopChanged_conn), 
	.ReleaseDoorOverride_eI(DoorOverride_conn), 
	.BottlingDone_eI(Injector_InjectDone_conn), 
	
	//data outputs
	
	//data inputs
	.EmergencyStop_I(EmergencyStop_conn),
	
	
	.reset(reset)
);

FB_InjectorController Injector (
	.clk(clk),

	//event outputs 
	.InjectDone_eO(Injector_InjectDone_conn),
	.InjectorPositionChanged_eO(Injector_InjectorPositionChanged_conn),
	.InjectorControlsChanged_eO(Injector_InjectorControlsChanged_conn),
	.RejectCanister_eO(Injector_RejectCanister_conn),
	.FillContentsChanged_eO(Injector_FillContentsChanged_conn),
	.StartVacuumTimer_eO(Injector_StartVacuumTimer_conn),
	
	//event inputs
	.InjectorArmFinishedMovement_eI(InjectorArmFinishMovement_conn), 
	.EmergencyStopChanged_eI(EmergencyStopChanged_conn), 
	.CanisterPressureChanged_eI(CanisterPressureChanged_conn), 
	.FillContentsAvailableChanged_eI(FillContentsAvailableChanged_conn), 
	.VacuumTimerElapsed_eI(VacuumTimerElapsed_conn), 
	.ConveyorStoppedForInject_eI(Conveyor_ConveyorStoppedForInject_conn), 
	
	//data outputs
	.InjectorPosition_O(Injector_InjectorPosition_conn), 
	.InjectorContentsValveOpen_O(Injector_InjectorContentsValveOpen_conn), 
	.InjectorVacuumRun_O(Injector_InjectorVacuumRun_conn), 
	.InjectorPressurePumpRun_O(Injector_InjectorPressurePumpRun_conn), 
	.FillContents_O(Injector_FillContents_conn), 
	
	//data inputs
	.EmergencyStop_I(EmergencyStop_conn),
	.CanisterPressure_I(CanisterPressure_conn),
	.FillContentsAvailable_I(FillContentsAvailable_conn),
	
	
	.reset(reset)
);

FB_ConveyorController Conveyor (
	.clk(clk),

	//event outputs 
	.ConveyorChanged_eO(Conveyor_ConveyorChanged_conn),
	.ConveyorStoppedForInject_eO(Conveyor_ConveyorStoppedForInject_conn),
	
	//event inputs
	.EmergencyStopChanged_eI(EmergencyStopChanged_conn), 
	.LasersChanged_eI(LasersChanged_conn), 
	.InjectDone_eI(Injector_InjectDone_conn), 
	
	//data outputs
	.ConveyorSpeed_O(Conveyor_ConveyorSpeed_conn), 
	
	//data inputs
	.EmergencyStop_I(EmergencyStop_conn),
	.InjectSiteLaser_I(InjectSiteLaser_conn),
	
	
	.reset(reset)
);

FB_RejectArmController RejectArm (
	.clk(clk),

	//event outputs 
	.GoRejectArm_eO(RejectArm_GoRejectArm_conn),
	
	//event inputs
	.LasersChanged_eI(LasersChanged_conn), 
	.RejectCanister_eI(Injector_RejectCanister_conn), 
	
	//data outputs
	
	//data inputs
	.RejectSiteLaser_I(RejectSiteLaser_conn),
	
	
	.reset(reset)
);



endmodule