// This file has been automatically generated by goFB and should not be edited by hand
// Compiler written by Hammond Pearce and available at github.com/kiwih/goFB
// Verilog support is EXPERIMENTAL ONLY

// This file represents the Composite Function Block for VVI_Pacemaker

module FB_VVI_Pacemaker 

(
		input wire clk,
		
		//input events
		input wire VPulse_eI,
		input wire VRP_Timer_Timeout_eI,
		input wire LRI_Timer_Timeout_eI,
		
		//output events
		output wire VPace_eO,
		output wire VRefractory_eO,
		output wire VRP_Start_Timer_eO,
		output wire LRI_Timer_Start_eO,
		output wire LRI_Timer_Stop_eO,
		
		
		//output variables
		output wire signed [15:0] VRP_Timeout_Value_O ,
		output wire signed [15:0] LRI_Timeout_Value_O ,
		

		input reset
);


//Wires needed for event connections 
wire VPulse_conn;
wire VRP_Timer_Timeout_conn;
wire LRI_Timer_Timeout_conn;
wire VVI_LRI_VPace_conn;
wire VVI_VRP_VRefractory_conn;
wire VVI_VRP_VRP_Start_Timer_conn;
wire VVI_LRI_LRI_Timer_Start_conn;
wire VVI_LRI_LRI_Timer_Stop_conn;
wire VVI_VRP_VSense_conn;


//Wires needed for data connections 
wire signed [15:0] VVI_VRP_VRP_Timeout_Value_conn;
wire signed [15:0] VVI_LRI_LRI_Timeout_Value_conn;


//top level I/O to signals
//input events
assign VPulse_conn = VPulse_eI;
assign VRP_Timer_Timeout_conn = VRP_Timer_Timeout_eI;
assign LRI_Timer_Timeout_conn = LRI_Timer_Timeout_eI;

//output events
assign VPace_eO = VVI_LRI_VPace_conn;
assign VRefractory_eO = VVI_VRP_VRefractory_conn;
assign VRP_Start_Timer_eO = VVI_VRP_VRP_Start_Timer_conn;
assign LRI_Timer_Start_eO = VVI_LRI_LRI_Timer_Start_conn;
assign LRI_Timer_Stop_eO = VVI_LRI_LRI_Timer_Stop_conn;

//output events
assign VRP_Timeout_Value_O = VVI_VRP_VRP_Timeout_Value_conn;
assign LRI_Timeout_Value_O = VVI_LRI_LRI_Timeout_Value_conn;



// child I/O to signals

FB_VVI_LRI VVI_LRI (
	.clk(clk),

	//event outputs 
	.VPace_eO(VVI_LRI_VPace_conn),
	.LRI_Timer_Start_eO(VVI_LRI_LRI_Timer_Start_conn),
	.LRI_Timer_Stop_eO(VVI_LRI_LRI_Timer_Stop_conn),
	
	//event inputs
	.LRI_Timer_Timeout_eI(LRI_Timer_Timeout_conn), 
	.VSense_eI(VVI_VRP_VSense_conn), 
	
	//data outputs
	.LRI_Timeout_Value_O(VVI_LRI_LRI_Timeout_Value_conn), 
	
	//data inputs
	
	
	.reset(reset)
);

FB_VVI_VRP VVI_VRP (
	.clk(clk),

	//event outputs 
	.VRefractory_eO(VVI_VRP_VRefractory_conn),
	.VRP_Start_Timer_eO(VVI_VRP_VRP_Start_Timer_conn),
	.VSense_eO(VVI_VRP_VSense_conn),
	
	//event inputs
	.VPulse_eI(VPulse_conn), 
	.VRP_Timer_Timeout_eI(VRP_Timer_Timeout_conn), 
	.VPace_eI(VVI_LRI_VPace_conn), 
	
	//data outputs
	.VRP_Timeout_Value_O(VVI_VRP_VRP_Timeout_Value_conn), 
	
	//data inputs
	
	
	.reset(reset)
);



endmodule