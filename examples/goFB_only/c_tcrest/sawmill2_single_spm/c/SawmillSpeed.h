// This file has been automatically generated by goFB and should not be edited by hand
// Compiler written by Hammond Pearce and available at github.com/kiwih/goFB

// This file represents the interface of Function Block SawmillSpeed
#ifndef SAWMILLSPEED_H_
#define SAWMILLSPEED_H_

#include "fbtypes.h"

//This is a BFB, so we need an enum type for the state machine
enum SawmillSpeed_states { STATE_SawmillSpeed_Start, STATE_SawmillSpeed_Run };


union SawmillSpeedInputEvents {
	struct {
		UDINT NewPos;
	} event;
	
};


union SawmillSpeedOutputEvents {
	struct {
		UDINT BadSpeedChange;
	} event;
	
};


typedef struct {
    //input events
	union SawmillSpeedInputEvents inputEvents;

    //output events
	union SawmillSpeedOutputEvents outputEvents;

    //input vars
	REAL Pos;
    
    //output vars
	BOOL BadSpeed;
    
	//any internal vars (BFBs only)
    REAL LastPos;
    
	//any child FBs (CFBs only)
	
	//resource vars
	
	//resources (Devices only)
	
	//state and trigger (BFBs only)
	enum SawmillSpeed_states _state; //stores current state
	BOOL _trigger; //indicates if a state transition has occured this tick
	
} SawmillSpeed_t;

//all FBs get a preinit function
int SawmillSpeed_preinit(SawmillSpeed_t _SPM *me);

//all FBs get an init function
int SawmillSpeed_init(SawmillSpeed_t _SPM *me);

//all FBs get a run function
void SawmillSpeed_run(SawmillSpeed_t _SPM *me);

//basic FBs have a number of algorithm functions

void SawmillSpeed_speedChange_service(SawmillSpeed_t _SPM *me);


#endif
