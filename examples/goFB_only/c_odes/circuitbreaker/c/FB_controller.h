// This file has been automatically generated by goFB and should not be edited by hand
// Compiler written by Hammond Pearce and available at github.com/kiwih/goFB

// This file represents the interface of Function Block controller
#ifndef CONTROLLER_H_
#define CONTROLLER_H_

#include "fbtypes.h"
#include "util.h"


#include "cvode/cvode.h"
#include "nvector/nvector_serial.h"
#include "cvode/cvode_dense.h"
#include "sundials/sundials_dense.h"
#include "sundials/sundials_types.h"


//This is a BFB with states, so we need an enum type for the state machine
enum controller_states { STATE_controller_INIT, STATE_controller_L_OFF_E0, STATE_controller_L_OFF, STATE_controller_L_ON_E0, STATE_controller_L_ON, STATE_controller_L_FAULT_E0, STATE_controller_L_FAULT };




//this block had no input events


union controllerOutputEvents {
	struct {
		UDINT off;
		UDINT on;
		UDINT fault;
	} event;
	
};


typedef struct {
    //input events
	

    //output events
	union controllerOutputEvents outputEvents;

    //input vars
	
    //output vars
	
	//any internal vars (BFBs only)
    LREAL StateChangeTime;
    LREAL DeltaTime;
    LREAL x;
    
	//any child FBs (CFBs only)
	
	//resource vars
	
	//resources (Devices only)
	
	//state and trigger (BFBs only)
	enum controller_states _state; //stores current state
	BOOL _trigger; //indicates if a state transition has occured this tick
	//this block uses cvode
	void *cvode_mem;
	N_Vector ode_solution;
	realtype T0;
	realtype Tnext;
	realtype Tcurr;
	int solveInProgress;
	
	
	

	

} controller_t;

//all FBs get a preinit function
int controller_preinit(controller_t  *me);

//all FBs get an init function
int controller_init(controller_t  *me);

//all FBs get a run function
void controller_run(controller_t  *me);



#endif
