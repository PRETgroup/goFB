// This file has been automatically generated by goFB and should not be edited by hand
// Compiler written by Hammond Pearce and available at github.com/kiwih/goFB

// This file represents the interface of Function Block plant
#ifndef PLANT_H_
#define PLANT_H_

#include "fbtypes.h"
#include "util.h"


#include "cvode/cvode.h"
#include "nvector/nvector_serial.h"
#include "cvode/cvode_dense.h"
#include "sundials/sundials_dense.h"
#include "sundials/sundials_types.h"


//This is a BFB, so we need an enum type for the state machine
enum plant_states { STATE_plant_Start, STATE_plant_State1E0, STATE_plant_State1, STATE_plant_State2E0, STATE_plant_State2, STATE_plant_State1E1 };


//this block had no input events


union plantOutputEvents {
	struct {
		UDINT update;
	} event;
	
};


typedef struct {
    //input events
	

    //output events
	union plantOutputEvents outputEvents;

    //input vars
	LREAL DeltaTime;
    LREAL v1;
    LREAL v2;
    LREAL r1;
    LREAL r2;
    LREAL w;
    
    //output vars
	LREAL x1;
    LREAL x2;
    
	//any internal vars (BFBs only)
    
	//any child FBs (CFBs only)
	
	//resource vars
	
	//resources (Devices only)
	
	//state and trigger (BFBs only)
	enum plant_states _state; //stores current state
	BOOL _trigger; //indicates if a state transition has occured this tick
	//this block uses cvode
	void *cvode_mem;
	N_Vector ode_solution;
	realtype T0;
	realtype Tnext;
	realtype Tcurr;
	int solveInProgress;
	

	
} plant_t;

//all FBs get a preinit function
int plant_preinit(plant_t  *me);

//all FBs get an init function
int plant_init(plant_t  *me);

//all FBs get a run function
void plant_run(plant_t  *me);



#endif
