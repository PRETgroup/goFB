{{define "compositeFB"}}-- This file has been automatically generated by go-iec61499-vhdl and should not be edited by hand
-- Converter written by Hammond Pearce and available at github.com/kiwih/go-iec61499-vhdl
{{$block := index .Blocks .BlockIndex}}{{$blocks := .Blocks}}{{$compositeFB := $block.CompositeFB}}{{$connAndTypes := $block.GetDataConnectionTypes $blocks}}
-- This file represents the Composite Function Block for {{$block.Name}}

library ieee;
use ieee.std_logic_1164.all;
{{template "_entityFB" $block}}
architecture rtl of {{$block.Name}} is
	-- Signals needed for event connections {{range $curConnIndex, $conn := $compositeFB.EventConnections}}
	signal {{$conn.VhdlName}} : std_logic;{{end}}

	-- Signals needed for data connections {{range $curConnIndex, $conn := $connAndTypes}}
	signal {{$conn.VhdlName}} : {{getVhdlType $conn.Type}}; --type was {{$conn.Type}}{{end}}

	-- Signals needed for the done signals {{range $currChildIndex, $child := $compositeFB.FBs}}
	signal {{$child.Name}}_done : std_logic;{{end}}
begin
	--top level I/O to signals
	{{if $block.EventInputs}}--input events
	{{range $index, $event := $block.EventInputs.Events}}{{range $curConnIndex, $conn := $compositeFB.EventConnections}}{{if eq $conn.Source $event.Name}}{{$conn.VhdlName}} <= {{$event.Name}};
	{{end}}{{end}}{{end}}
	{{end}}{{if $block.EventOutputs}}--output events
	{{range $index, $event := $block.EventOutputs.Events}}{{range $curConnIndex, $conn := $compositeFB.EventConnections}}{{if eq $conn.Destination $event.Name}}{{$event.Name}} <= {{$conn.VhdlName}};
	{{end}}{{end}}{{end}}
	{{end}}{{if $block.InputVars}}--input variables
	{{range $index, $var := $block.InputVars.Variables}}{{range $curConnIndex, $conn := $compositeFB.DataConnections}}{{if eq $conn.Source $var.Name}}{{$conn.VhdlName}} <= {{$var.Name}};
	{{end}}{{end}}{{end}}
	{{end}}{{if $block.OutputVars}}--output events
	{{range $index, $var := $block.OutputVars.Variables}}{{range $curConnIndex, $conn := $compositeFB.DataConnections}}{{if eq $conn.Destination $var.Name}}{{$var.Name}} <= {{$conn.VhdlName}};
	{{end}}{{end}}{{end}}
	{{end}}
	-- child I/O to signals
	{{range $currChildIndex, $child := $compositeFB.FBs}}
	{{$child.Name}} : entity work.{{$child.Type}} port map(
		clk => clk,
		rst => rst,
		enable => enable,

		--events
		{{range $curConnIndex, $conn := $compositeFB.EventConnections}}{{if $conn.FromName $child.Name}}{{$conn.SourceApiNameOnly}} => {{$conn.VhdlName}}, --output
		{{else if $conn.ToName $child.Name}}{{$conn.DestApiNameOnly}} => {{$conn.VhdlName}}, --input
		{{end}}{{end}}
		--data
		{{range $curConnIndex, $conn := $compositeFB.DataConnections}}{{if $conn.FromName $child.Name}}{{$conn.SourceApiNameOnly}} => {{$conn.VhdlName}}, --output 
		{{else if $conn.ToName $child.Name}}{{$conn.DestApiNameOnly}} => {{$conn.VhdlName}}, --input
		{{end}}{{end}}
		done => {{$child.Name}}_done
	);
	{{end}}

	-- done signal
	done <= {{if $compositeFB.FBs}}{{range $currChildIndex, $child := $compositeFB.FBs}}{{if $currChildIndex}} and {{end}}{{$child.Name}}_done{{end}}{{else}}'1'{{end}};
	
end rtl;
{{end}}
