{{define "FBheader"}}// This file has been automatically generated by go-iec61499 and should not be edited by hand
// Converter written by Hammond Pearce and available at github.com/kiwih/go-iec61499
{{$block := index .Blocks .BlockIndex}}{{$blocks := .Blocks}}
// This file represents the interface of Function Block {{$block.Name}}
#include "fbtypes.h"

struct {{$block.Name}}InputEvents {
{{if $block.EventInputs}}{{range $index, $event := $block.EventInputs.Events}}	EVENT {{$event.Name}};
{{end}}{{end}}}

struct {{$block.Name}}OutputEvents {
{{if $block.EventOutputs}}{{range $index, $event := $block.EventOutputs.Events}}	EVENT {{$event.Name}};
{{end}}{{end}}}

{{/*struct {{$block.Name}}InputVars {
{{if $block.InputVars}}{{range $index, $var := $block.InputVars.Variables}}	{{$var.Type}} {{$var.Name}};
{{end}}{{end}}}*/}}

{{/*struct {{$block.Name}}OutputVars {
{{if $block.OutputVars}}{{range $index, $var := $block.OutputVars.Variables}}	{{$var.Type}} {{$var.Name}};
{{end}}{{end}}}*/}}

{{/*{{if $block.BasicFB}}struct {{$block.Name}}InternalVars {
{{if $block.BasicFB.InternalVars}}{{range $varIndex, $var := $block.BasicFB.InternalVars.Variables}}	{{$var.Type}} {{$var.Name}};
{{end}}{{end}}}{{end}}*/}}

struct {{$block.Name}} {
    //input events
    struct {{$block.Name}}InputEvents inputEvents;

    //output events
    struct {{$block.Name}}OutputEvents outputEvents;

    //input vars
    {{if $block.InputVars}}{{range $index, $var := $block.InputVars.Variables}}
    {{$var.Type}} {{$var.Name}};{{end}}{{end}}

    //output vars
    {{if $block.OutputVars}}{{range $index, $var := $block.OutputVars.Variables}}
    {{$var.Type}} {{$var.Name}};{{end}}{{end}}

    {{if $block.BasicFB}}//internal vars
    {{if $block.BasicFB.InternalVars}}{{range $varIndex, $var := $block.BasicFB.InternalVars.Variables}}
    {{$var.Type}} {{$var.Name}};{{end}}{{end}}{{end}}

    {{/*struct {{$block.Name}}InputVars inputVars;
    struct {{$block.Name}}OutputVars outputVars;
    {{if $block.BasicFB}}struct {{$block.Name}}InternalVars internalVars;{{end}}*/}}
}

void {{$block.Name}}_init(struct {{$block.Name}} *me);

void {{$block.Name}}_run(struct {{$block.Name}} *me, int ev_offset);

{{end}}